version: '3'
services:
  server:
    build: .
    expose: [8080]
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.web.rule=Host(`${HOST}`)'
      - 'traefik.http.routers.web.entrypoints=websecure'
      - 'traefik.http.routers.web.tls.certresolver=letsencrypt'
      - 'traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=https://${HOST}'
      - 'traefik.http.middlewares.cors.headers.allowedhosts=https://${HOST}'
      - 'traefik.http.middlewares.cors.headers.accesscontrolallowheaders=*'
      - 'traefik.http.middlewares.cors.headers.accesscontrolexposeheaders=*'
      - 'traefik.http.middlewares.cors.Headers.AccessControlAllowMethods=GET,POST,PUT,DELETE,OPTIONS'
    environment:
      DATAFILE_PATH: '/data.json'
    volumes:
      - /opt/eisen/data.json:/data.json

  deploy:
    image: traefik:v3.1
    command:
      - '--log.level=DEBUG'
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.letsencrypt.acme.email=demo@${HOST}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/traefik/letsencrypt:/letsencrypt
